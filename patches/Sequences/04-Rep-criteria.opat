
(:patch
 (:om-version 0.03)
 (:name "04-Rep-criteria")
 (:doc "")
 (:info
  (:created "2019/09/22 18:15:26")
  (:modified "2019/09/22 18:22:15"))
 (:window (:size (1129 715)) (:position (189 46)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference suite-reproductible)
   (:group-id nil)
   (:name "suite-reproductible")
   (:x 359)
   (:y 241)
   (:w 132)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 7) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :function)
   (:reference permut-random)
   (:group-id nil)
   (:name "permut-random")
   (:x 769)
   (:y 171)
   (:w 116)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 769)
   (:y 131)
   (:w 117)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 2 3 4 5 6 7 8 9 10))
   (:id 2))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference suite-reproductible)
   (:group-id nil)
   (:name "suite-reproductible")
   (:x 779)
   (:y 265)
   (:w 132)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 11) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE")
   (:x 694)
   (:y 325)
   (:w 185)
   (:h 96)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 24) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots
      ((:n 24)
       (:puntos
        (:list
         (:list 10 1 2 7 3 6 4 5 8 9)
         (:list 2 1 5 7 3 9 1 3 1 1)
         (:list 10 4 2 7 6 3 2 9 0 1)
         (:list 5 9 5 10 8 10 7 2 1 9)
         (:list 4 7 5 9 2 8 6 10 8 7)
         (:list 3 9 4 4 6 9 4 9 10 8)
         (:list 6 6 0 2 3 6 5 1 9 6)
         (:list 0 5 2 1 3 10 7 8 8 0)
         (:list 5 8 10 2 7 8 1 0 3 0)
         (:list 3 2 3 5 1 4 10 3 8 5)
         (:list 10 1 2 7 3 6 4 5 8 9)))))))
   (:id 4))
  (:box
   (:type :function)
   (:reference c2chord-seq)
   (:group-id nil)
   (:name "c2chord-seq")
   (:x 793)
   (:y 478)
   (:w 98)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BASE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "APPROX")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 658)
   (:y 534)
   (:w 386)
   (:h 86)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 11000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6500 6050 6100 6350 6150 6300 6200 6250 6400 6450)
         (:list 6100 6050 6250 6350 6150 6450 6050 6150 6050 6050)
         (:list 6500 6200 6100 6350 6300 6150 6100 6450 6000 6050)
         (:list 6250 6450 6250 6500 6400 6500 6350 6100 6050 6450)
         (:list 6200 6350 6250 6450 6100 6400 6300 6500 6400 6350)
         (:list 6150 6450 6200 6200 6300 6450 6200 6450 6500 6400)
         (:list 6300 6300 6000 6100 6150 6300 6250 6050 6450 6300)
         (:list 6000 6250 6100 6050 6150 6500 6350 6400 6400 6000)
         (:list 6250 6400 6500 6100 6350 6400 6050 6000 6150 6000)
         (:list 6150 6100 6150 6250 6050 6200 6500 6150 6400 6250)
         (:list 6500 6050 6100 6350 6150 6300 6200 6250 6400 6450)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000))
       (:ldur
        (:list
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)))
       (:lvel
        (:list
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)))
       (:loffset
        (:list
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)))
       (:lport (:list nil nil nil nil nil nil nil nil nil nil nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)))
       (:lport (:list nil nil nil nil nil nil nil nil nil nil nil))
       (:llegato nil)))))
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux4")
   (:x 855)
   (:y 436)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux4")
   (:x 452)
   (:y 432)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 8))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 85)
   (:y 531)
   (:w 456)
   (:h 97)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 7000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6300 6500 6100 6200 6400 6600)
         (:list 6200 6300 6100 6200 6200 6400)
         (:list 6100 6500 6100 6000 6200 6500)
         (:list 6400 6300 6600 6200 6300 6300)
         (:list 6600 6300 6300 6100 6000 6100)
         (:list 6400 6000 6500 6600 6100 6500)
         (:list 6300 6500 6100 6200 6400 6600)))
       (:lonset (:list 0 1000 2000 3000 4000 5000 6000 7000))
       (:ldur
        (:list
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)))
       (:lvel
        (:list
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)))
       (:loffset
        (:list
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)))
       (:lport (:list nil nil nil nil nil nil nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)))
       (:lport (:list nil nil nil nil nil nil nil))
       (:llegato nil)))))
   (:id 9))
  (:box
   (:type :function)
   (:reference c2chord-seq)
   (:group-id nil)
   (:name "c2chord-seq")
   (:x 361)
   (:y 464)
   (:w 98)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BASE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "APPROX")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE")
   (:x 274)
   (:y 327)
   (:w 185)
   (:h 96)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots
      ((:n 12)
       (:puntos
        (:list
         (:list 3 5 1 2 4 6)
         (:list 2 3 1 2 2 4)
         (:list 1 5 1 0 2 5)
         (:list 4 3 6 2 3 3)
         (:list 6 3 3 1 0 1)
         (:list 4 0 5 6 1 5)
         (:list 3 5 1 2 4 6)))))))
   (:id 11))
  (:comment
   (:x 293)
   (:y 11)
   (:w 443)
   (:h 56)
   (:fgcolor (:color 5/17 41/255 143/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 36) (:style :plain)))
   (:align nil)
   (:text "Criteria of reproducibility")
   (:id 12))
  (:comment
   (:x 83)
   (:y 64)
   (:w 874)
   (:h 33)
   (:fgcolor (:color 5/17 41/255 143/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 18) (:style :plain)))
   (:align nil)
   (:text
    "Any sequence of p-1 different elements (p is a prime number) taking values in Z/pZ is reproducible")
   (:id 13))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 357)
   (:y 160)
   (:w 75)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 2 3 4 5 6))
   (:id 14))
  (:box
   (:type :function)
   (:reference permut-random)
   (:group-id nil)
   (:name "permut-random")
   (:x 337)
   (:y 195)
   (:w 116)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 859)
   (:y 230)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 11)
   (:id 16)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 11 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 1 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 4 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 5 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 5 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 10 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 3 :in 1))
   (:attributes (:color nil :style nil :modif nil)))))