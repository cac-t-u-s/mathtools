
(:patch
 (:om-version 0.03)
 (:name "09-paradox")
 (:doc "")
 (:info
  (:created "2019/09/22 15:47:31")
  (:modified "2019/09/22 17:09:33"))
 (:window (:size (860 730)) (:position (479 177)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 249)
   (:y 569)
   (:w 60)
   (:h 25)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "inversion")
   (:id 0))
  (:comment
   (:x 162)
   (:y 444)
   (:w 107)
   (:h 36)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "transposition by 5 semitons")
   (:id 1))
  (:comment
   (:x 195)
   (:y 274)
   (:w 107)
   (:h 36)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "complement
(in integer mode)")
   (:id 2))
  (:comment
   (:x 45)
   (:y 14)
   (:w 785)
   (:h 44)
   (:fgcolor (:color 10/51 52/255 199/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 24) (:style :plain)))
   (:align nil)
   (:text
    "Set-theoretical paradoxes: a set that is included in its complement!")
   (:id 3))
  (:comment
   (:x 379)
   (:y 510)
   (:w 119)
   (:h 29)
   (:fgcolor (:color 28/85 41/255 1 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 14) (:style :plain)))
   (:align nil)
   (:text "complement")
   (:id 4))
  (:comment
   (:x 246)
   (:y 65)
   (:w 47)
   (:h 26)
   (:fgcolor (:color 28/85 41/255 1 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 14) (:style :plain)))
   (:align nil)
   (:text "5-16")
   (:id 5))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference inv)
   (:group-id nil)
   (:name "inv")
   (:x 320)
   (:y 564)
   (:w 52)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TYPE")
     (:value :integer)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SET")
     (:value (:list 0 1 2 7))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 114)
   (:y 429)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 7))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference transp)
   (:group-id nil)
   (:name "transp")
   (:x 96)
   (:y 484)
   (:w 69)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TYPE")
     (:value :integer)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VALUE")
     (:value 3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SET")
     (:value (:list 0 1 3 4 5 7))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:comment
   (:x 578)
   (:y 204)
   (:w 70)
   (:h 46)
   (:fgcolor (:color 28/85 41/255 1 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 14) (:style :plain)))
   (:align nil)
   (:text
    "inclusion
------->")
   (:id 9))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference comp)
   (:group-id nil)
   (:name "comp")
   (:x 118)
   (:y 276)
   (:w 65)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TYPE")
     (:value :integer)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FROM")
     (:value 5)
     (:reactive nil))
    (:input (:type :standard) (:name "TO") (:value 5) (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value (:list 0 1 2 7))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE1")
   (:x 347)
   (:y 134)
   (:w 183)
   (:h 192)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE1")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots ((:n 12) (:puntos (:list (:list 0 5 6 8 9)))))))
   (:id 11))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE")
   (:x 663)
   (:y 135)
   (:w 167)
   (:h 179)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots ((:n 12) (:puntos (:list (:list 6 5 4 3 0 9 8)))))))
   (:id 12))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE")
   (:x 294)
   (:y 363)
   (:w 180)
   (:h 140)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots ((:n 12) (:puntos (:list (:list 1 2 3 4 7 10 11)))))))
   (:id 13))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux1")
   (:x 246)
   (:y 95)
   (:w 105)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 5 6 8 9))
   (:id 14)))
 (:connections
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 12 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 6 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 8 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 13 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 10 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 11 :in 2))
   (:attributes (:color nil :style nil :modif nil)))))