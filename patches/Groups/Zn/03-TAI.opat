
(:patch
 (:om-version 0.03)
 (:name "03-TAI")
 (:doc "")
 (:info
  (:created "2019/09/22 9:43:53")
  (:modified "2019/09/22 10:24:44"))
 (:window (:size (929 637)) (:position (336 345)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :function)
   (:reference c2chord-seq)
   (:group-id nil)
   (:name "c2chord-seq")
   (:x 623)
   (:y 396)
   (:w 98)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BASE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "APPROX")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:comment
   (:x 207)
   (:y 19)
   (:w 559)
   (:h 56)
   (:fgcolor (:color 10/51 52/255 199/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 36) (:style :plain)))
   (:align nil)
   (:text "The family of self-invers chords")
   (:id 1))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 577)
   (:y 454)
   (:w 217)
   (:h 97)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 5000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6000 6100 6200 6400 6500 6900 7000)
         (:list 6000 6100 6200 6400 6500 6600 6900)
         (:list 6000 6100 6200 6300 6400 6700 6900)
         (:list 6000 6100 6200 6300 6400 6600 7000)
         (:list 6000 6100 6200 6300 6400 6500 6600)))
       (:lonset (:list 0 1000 2000 3000 4000 5000))
       (:ldur
        (:list
         (:list 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000)))
       (:lvel
        (:list
         (:list 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100)))
       (:loffset
        (:list
         (:list 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1)))
       (:lport (:list nil nil nil nil nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1)))
       (:lport (:list nil nil nil nil nil))
       (:llegato nil)))))
   (:id 2))
  (:comment
   (:x 696)
   (:y 291)
   (:w 171)
   (:h 77)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "<--- These are 5 of the 10 possible self-invers eptachords (up to transposition!)
Note that they have different inversion axis.")
   (:id 3))
  (:comment
   (:x 688)
   (:y 133)
   (:w 82)
   (:h 49)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "<--- we ask for five solutions. ")
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux4")
   (:x 654)
   (:y 137)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux3")
   (:x 634)
   (:y 171)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7)
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux1")
   (:x 594)
   (:y 137)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 7))
  (:comment
   (:x 249)
   (:y 376)
   (:w 86)
   (:h 56)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "<--- Some eptachords in the cyclic representation")
   (:id 8))
  (:comment
   (:x 343)
   (:y 263)
   (:w 96)
   (:h 64)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "<--- orbites give the complete list of eptachords in Z/12Z
")
   (:id 9))
  (:comment
   (:x 332)
   (:y 186)
   (:w 141)
   (:h 57)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "<--- Card shows that there are 66 eptachords (up to transposition!)")
   (:id 10))
  (:comment
   (:x 266)
   (:y 147)
   (:w 132)
   (:h 37)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "<--- we are looking for eptachords")
   (:id 11))
  (:comment
   (:x 70)
   (:y 192)
   (:w 65)
   (:h 58)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "---->
The octave is divided in 12 parts")
   (:id 12))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE1")
   (:x 127)
   (:y 376)
   (:w 119)
   (:h 114)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE1")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots
      ((:n 12)
       (:puntos
        (:list
         (:list 0 1 3 5 6 8 10)
         (:list 0 1 3 4 7 8 10)
         (:list 0 1 3 4 6 8 10)
         (:list 0 1 3 4 6 8 9)
         (:list 0 1 3 4 6 7 10)
         (:list 0 1 3 4 6 7 9)
         (:list 0 1 2 6 7 9 10)
         (:list 0 1 2 5 7 9 10)
         (:list 0 1 2 5 7 8 10)
         (:list 0 1 2 5 6 9 10)
         (:list 0 1 2 5 6 8 10)
         (:list 0 1 2 5 6 8 9)
         (:list 0 1 2 5 6 7 10)
         (:list 0 1 2 4 7 9 10)
         (:list 0 1 2 4 7 8 10)
         (:list 0 1 2 4 7 8 9)
         (:list 0 1 2 4 6 9 10)
         (:list 0 1 2 4 6 8 10)
         (:list 0 1 2 4 6 8 9)
         (:list 0 1 2 4 6 7 10)
         (:list 0 1 2 4 6 7 9)
         (:list 0 1 2 4 6 7 8)
         (:list 0 1 2 4 5 9 10)
         (:list 0 1 2 4 5 8 10)
         (:list 0 1 2 4 5 8 9)
         (:list 0 1 2 4 5 7 10)
         (:list 0 1 2 4 5 7 9)
         (:list 0 1 2 4 5 7 8)
         (:list 0 1 2 4 5 6 10)
         (:list 0 1 2 4 5 6 9)
         (:list 0 1 2 4 5 6 8)
         (:list 0 1 2 3 8 9 10)
         (:list 0 1 2 3 7 9 10)
         (:list 0 1 2 3 7 8 10)
         (:list 0 1 2 3 7 8 9)
         (:list 0 1 2 3 6 9 10)
         (:list 0 1 2 3 6 8 10)
         (:list 0 1 2 3 6 8 9)
         (:list 0 1 2 3 6 7 10)
         (:list 0 1 2 3 6 7 9)
         (:list 0 1 2 3 6 7 8)
         (:list 0 1 2 3 5 9 10)
         (:list 0 1 2 3 5 8 10)
         (:list 0 1 2 3 5 8 9)
         (:list 0 1 2 3 5 7 10)
         (:list 0 1 2 3 5 7 9)
         (:list 0 1 2 3 5 7 8)
         (:list 0 1 2 3 5 6 10)
         (:list 0 1 2 3 5 6 9)
         (:list 0 1 2 3 5 6 8)
         (:list 0 1 2 3 5 6 7)
         (:list 0 1 2 3 4 9 10)
         (:list 0 1 2 3 4 8 10)
         (:list 0 1 2 3 4 8 9)
         (:list 0 1 2 3 4 7 10)
         (:list 0 1 2 3 4 7 9)
         (:list 0 1 2 3 4 7 8)
         (:list 0 1 2 3 4 6 10)
         (:list 0 1 2 3 4 6 9)
         (:list 0 1 2 3 4 6 8)
         (:list 0 1 2 3 4 6 7)
         (:list 0 1 2 3 4 5 10)
         (:list 0 1 2 3 4 5 9)
         (:list 0 1 2 3 4 5 8)
         (:list 0 1 2 3 4 5 7)
         (:list 0 1 2 3 4 5 6)))))))
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux2")
   (:x 207)
   (:y 149)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7)
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 134)
   (:y 149)
   (:w 35)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 15))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference orbites)
   (:group-id nil)
   (:name "orbites")
   (:x 111)
   (:y 263)
   (:w 224)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input (:type :standard) (:name "K") (:value 6) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HOWMANY")
     (:value 4)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference card)
   (:group-id nil)
   (:name "card")
   (:x 264)
   (:y 188)
   (:w 59)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input (:type :standard) (:name "K") (:value 6) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:comment
   (:x 554)
   (:y 250)
   (:w 42)
   (:h 22)
   (:fgcolor (:color 28/85 41/255 1 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 12) (:style :plain)))
   (:align nil)
   (:text "TAI")
   (:id 18))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE")
   (:x 597)
   (:y 290)
   (:w 90)
   (:h 93)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots
      ((:n 12)
       (:puntos
        (:list
         (:list 0 1 2 4 5 9 10)
         (:list 0 1 2 4 5 6 9)
         (:list 0 1 2 3 4 7 9)
         (:list 0 1 2 3 4 6 10)
         (:list 0 1 2 3 4 5 6)))))))
   (:id 19))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference famille)
   (:group-id nil)
   (:name "famille")
   (:x 595)
   (:y 218)
   (:w 90)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "FAMILLY")
     (:value "tai")
     (:reactive nil))
    (:input (:type :standard) (:name "K") (:value 7) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HOWMANY")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 2 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 20 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 20 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 20 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 16 :in 1))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 13 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 16 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 19 :in 2))
   (:attributes (:color nil :style nil :modif nil)))))