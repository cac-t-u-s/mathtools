
(:patch
 (:om-version 0.03)
 (:name "05-TTL")
 (:doc "")
 (:info
  (:created "2019/09/22 9:43:54")
  (:modified "2019/09/22 10:21:58"))
 (:window (:size (1126 763)) (:position (84 46)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference tl-zn)
   (:group-id nil)
   (:name "tl-zn")
   (:x 917)
   (:y 131)
   (:w 59)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "N")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:comment
   (:x 955)
   (:y 297)
   (:w 125)
   (:h 57)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "<--- the complete list of chords with limited transposition")
   (:id 1))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ1")
   (:x 767)
   (:y 523)
   (:w 312)
   (:h 97)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ1")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 15000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6000 6200 6600 6800)
         (:list 6000 6600)
         (:list 6000 6100 6300 6600 6700 6900)
         (:list 6000 6200 6300 6600 6800 6900)
         (:list 6000 6100 6600 6700)
         (:list 6000 6100 6200 6400 6600 6700 6800 7000)
         (:list 6000 6100 6200 6600 6700 6800)
         (:list 6000 6100 6200 6300 6600 6700 6800 6900)
         (:list 6000 6100 6200 6300 6400 6600 6700 6800 6900 7000)
         (:list 6000 6400 6800)
         (:list 6000 6100 6400 6500 6800 6900)
         (:list 6000 6100 6200 6400 6500 6600 6800 6900 7000)
         (:list 6000 6300 6600 6900)
         (:list 6000 6100 6300 6400 6600 6700 6900 7000)
         (:list 6000 6200 6400 6600 6800 7000)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000
         13000
         14000
         15000))
       (:ldur
        (:list
         (:list 1000 1000 1000 1000)
         (:list 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)))
       (:lvel
        (:list
         (:list 100 100 100 100)
         (:list 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)))
       (:loffset
        (:list
         (:list 0 0 0 0)
         (:list 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1)
         (:list 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 0 0 0)
         (:list 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1)
         (:list 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))))
   (:id 2))
  (:box
   (:type :function)
   (:reference c2chord-seq)
   (:group-id nil)
   (:name "c2chord-seq")
   (:x 837)
   (:y 462)
   (:w 98)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BASE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "APPROX")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:comment
   (:x 1011)
   (:y 237)
   (:w 29)
   (:h 18)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "15")
   (:id 4))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 1011)
   (:y 194)
   (:w 69)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux4")
   (:x 854)
   (:y 131)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 6))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE")
   (:x 805)
   (:y 266)
   (:w 130)
   (:h 129)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 72) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots
      ((:n 12)
       (:puntos
        (:list
         (:list 0 2 6 8)
         (:list 0 6)
         (:list 0 1 3 6 7 9)
         (:list 0 2 3 6 8 9)
         (:list 0 1 6 7)
         (:list 0 1 2 4 6 7 8 10)
         (:list 0 1 2 6 7 8)
         (:list 0 1 2 3 6 7 8 9)
         (:list 0 1 2 3 4 6 7 8 9 10)
         (:list 0 4 8)
         (:list 0 1 4 5 8 9)
         (:list 0 1 2 4 5 6 8 9 10)
         (:list 0 3 6 9)
         (:list 0 1 3 4 6 7 9 10)
         (:list 0 2 4 6 8 10)))))))
   (:id 7))
  (:box
   (:type :function)
   (:reference c2chord)
   (:group-id nil)
   (:name "c2chord")
   (:x 503)
   (:y 317)
   (:w 77)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INDEX")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "BASE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "APPROX")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:comment
   (:x 89)
   (:y 0)
   (:w 793)
   (:h 60)
   (:fgcolor (:color 10/51 52/255 199/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 36) (:style :plain)))
   (:align nil)
   (:text
    "The family of transposition limited chords
")
   (:id 9))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 495)
   (:y 523)
   (:w 210)
   (:h 93)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 3000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6200 6400 6600 6800 7000 7200)
         (:list 6400 6600 6800 7000 7200 7400)
         (:list 6600 6800 7000 7200 7400 7600)))
       (:lonset (:list 0 1000 2000 3000))
       (:ldur
        (:list
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)))
       (:lvel
        (:list
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)))
       (:loffset
        (:list
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)))
       (:lport (:list nil nil nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)))
       (:lport (:list nil nil nil))
       (:llegato nil)))))
   (:id 10))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux5")
   (:x 602)
   (:y 422)
   (:w 87)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 200 400 600))
   (:id 11))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:om-version 0.03)
     (:name "OMLOOP")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (402 403)) (:position (210 184)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name "CHORD-SEQ")
       (:x 157)
       (:y 201)
       (:w 90)
       (:h 70)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CHORD-SEQ")
       (:display :hidden)
       (:showname nil)
       (:show-markers t)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value (:list 1))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "llegato")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil))
        (:output (:name "llegato") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:staff :g))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 1000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:lmidic (:list (:list 6000)))
           (:lonset (:list 0 1000))
           (:ldur (:list (:list 1000)))
           (:lvel (:list (:list 100)))
           (:loffset (:list (:list 0)))
           (:lchan (:list (:list 1)))
           (:lport (:list nil))
           (:llegato nil)))
         (:add-slots
          ((:loffset (:list (:list 0)))
           (:lchan (:list (:list 1)))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 0))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 82)
       (:y 144)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 13)
       (:y 99)
       (:w 68)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 27)
       (:y 278)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "input0")
         (:doc "no documentation")))
       (:group-id nil)
       (:name "input0")
       (:x 5)
       (:y 0)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 82)
       (:y 51)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "input1")
         (:doc "no documentation")))
       (:group-id nil)
       (:name "input1")
       (:x 159)
       (:y 0)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 132)
       (:y 278)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 7)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 1))
       (:to (:box 0 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 2 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:group-id nil)
   (:name "OMLOOP")
   (:x 586)
   (:y 459)
   (:w 83)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 12))
  (:box
   (:type :object)
   (:reference chord)
   (:group-id nil)
   (:name "CHORD")
   (:x 495)
   (:y 363)
   (:w 77)
   (:h 89)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic (:list 6000 6200 6400 6600 6800 7000))
       (:lvel (:list 80 80 80 80 80 80))
       (:loffset (:list 0 0 0 0 0 0))
       (:ldur (:list 1000 1000 1000 1000 1000 1000))
       (:lchan (:list 1 1 1 1 1 1))
       (:lport nil)
       (:notes
        (:list
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6000)
            (:vel 80)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6200)
            (:vel 80)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6400)
            (:vel 80)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6600)
            (:vel 80)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6800)
            (:vel 80)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 7000)
            (:vel 80)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))))))
     (:add-slots
      ((:onset 0) (:lchan (:list 1 1 1 1 1 1)) (:lport nil)))))
   (:id 13))
  (:comment
   (:x 610)
   (:y 103)
   (:w 97)
   (:h 81)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "<--- It is the greatest value in order to have chords belonging to this family! ")
   (:id 14))
  (:comment
   (:x 259)
   (:y 399)
   (:w 153)
   (:h 56)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "<--- Some exachords in the cyclic representation")
   (:id 15))
  (:comment
   (:x 316)
   (:y 283)
   (:w 96)
   (:h 64)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "<--- orbites give the complete list of exachords in Z/12Z
")
   (:id 16))
  (:comment
   (:x 213)
   (:y 145)
   (:w 141)
   (:h 57)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "<--- Card shows that there are 80 exachords (up to transposition!)")
   (:id 17))
  (:comment
   (:x 289)
   (:y 205)
   (:w 132)
   (:h 37)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "<--- we are looking for exachords")
   (:id 18))
  (:comment
   (:x 25)
   (:y 161)
   (:w 65)
   (:h 58)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "---->
The octave is divided in 12 parts")
   (:id 19))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux4")
   (:x 570)
   (:y 101)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 20))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux3")
   (:x 525)
   (:y 101)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 21))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux1")
   (:x 555)
   (:y 71)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6)
   (:id 22))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE1")
   (:x 82)
   (:y 399)
   (:w 119)
   (:h 114)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE1")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots
      ((:n 12)
       (:puntos
        (:list
         (:list 0 2 4 6 8 10)
         (:list 0 1 4 6 8 10)
         (:list 0 1 4 6 7 10)
         (:list 0 1 4 5 8 10)
         (:list 0 1 4 5 8 9)
         (:list 0 1 3 6 8 10)
         (:list 0 1 3 6 8 9)
         (:list 0 1 3 6 7 10)
         (:list 0 1 3 6 7 9)
         (:list 0 1 3 5 8 10)
         (:list 0 1 3 5 8 9)
         (:list 0 1 3 5 7 10)
         (:list 0 1 3 5 7 9)
         (:list 0 1 3 5 7 8)
         (:list 0 1 3 5 6 10)
         (:list 0 1 3 5 6 9)
         (:list 0 1 3 5 6 8)
         (:list 0 1 3 4 8 10)
         (:list 0 1 3 4 8 9)
         (:list 0 1 3 4 7 10)
         (:list 0 1 3 4 7 9)
         (:list 0 1 3 4 7 8)
         (:list 0 1 3 4 6 10)
         (:list 0 1 3 4 6 9)
         (:list 0 1 3 4 6 8)
         (:list 0 1 3 4 6 7)
         (:list 0 1 2 7 9 10)
         (:list 0 1 2 7 8 10)
         (:list 0 1 2 6 9 10)
         (:list 0 1 2 6 8 10)
         (:list 0 1 2 6 8 9)
         (:list 0 1 2 6 7 10)
         (:list 0 1 2 6 7 9)
         (:list 0 1 2 6 7 8)
         (:list 0 1 2 5 9 10)
         (:list 0 1 2 5 8 10)
         (:list 0 1 2 5 8 9)
         (:list 0 1 2 5 7 10)
         (:list 0 1 2 5 7 9)
         (:list 0 1 2 5 7 8)
         (:list 0 1 2 5 6 10)
         (:list 0 1 2 5 6 9)
         (:list 0 1 2 5 6 8)
         (:list 0 1 2 5 6 7)
         (:list 0 1 2 4 9 10)
         (:list 0 1 2 4 8 10)
         (:list 0 1 2 4 8 9)
         (:list 0 1 2 4 7 10)
         (:list 0 1 2 4 7 9)
         (:list 0 1 2 4 7 8)
         (:list 0 1 2 4 6 10)
         (:list 0 1 2 4 6 9)
         (:list 0 1 2 4 6 8)
         (:list 0 1 2 4 6 7)
         (:list 0 1 2 4 5 10)
         (:list 0 1 2 4 5 9)
         (:list 0 1 2 4 5 8)
         (:list 0 1 2 4 5 7)
         (:list 0 1 2 4 5 6)
         (:list 0 1 2 3 9 10)
         (:list 0 1 2 3 8 10)
         (:list 0 1 2 3 8 9)
         (:list 0 1 2 3 7 10)
         (:list 0 1 2 3 7 9)
         (:list 0 1 2 3 7 8)
         (:list 0 1 2 3 6 10)
         (:list 0 1 2 3 6 9)
         (:list 0 1 2 3 6 8)
         (:list 0 1 2 3 6 7)
         (:list 0 1 2 3 5 10)
         (:list 0 1 2 3 5 9)
         (:list 0 1 2 3 5 8)
         (:list 0 1 2 3 5 7)
         (:list 0 1 2 3 5 6)
         (:list 0 1 2 3 4 10)
         (:list 0 1 2 3 4 9)
         (:list 0 1 2 3 4 8)
         (:list 0 1 2 3 4 7)
         (:list 0 1 2 3 4 6)
         (:list 0 1 2 3 4 5)))))))
   (:id 23))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux2")
   (:x 162)
   (:y 168)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6)
   (:id 24))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 89)
   (:y 168)
   (:w 35)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 25))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference orbites)
   (:group-id nil)
   (:name "orbites")
   (:x 66)
   (:y 283)
   (:w 224)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input (:type :standard) (:name "K") (:value 6) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HOWMANY")
     (:value 4)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference card)
   (:group-id nil)
   (:name "card")
   (:x 219)
   (:y 210)
   (:w 59)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input (:type :standard) (:name "K") (:value 6) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:comment
   (:x 477)
   (:y 147)
   (:w 42)
   (:h 22)
   (:fgcolor (:color 28/85 41/255 1 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 12) (:style :plain)))
   (:align nil)
   (:text "TTL")
   (:id 28))
  (:box
   (:type :object)
   (:reference n-cercle)
   (:group-id nil)
   (:name "N-CERCLE")
   (:x 499)
   (:y 192)
   (:w 82)
   (:h 95)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "N-CERCLE")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PUNTOS")
     (:value (:list 0 5 7))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "N") (:reactive nil))
    (:output (:name "PUNTOS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class n-cercle)
     (:slots
      ((:n 12)
       (:puntos
        (:list
         (:list 0 2 4 6 8 10)
         (:list 0 1 4 6 7 10)
         (:list 0 1 4 5 8 9)
         (:list 0 1 3 6 7 9)
         (:list 0 1 2 6 7 8)))))))
   (:id 29))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference famille)
   (:group-id nil)
   (:name "famille")
   (:x 528)
   (:y 139)
   (:w 71)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 12) (:reactive nil))
    (:input
     (:type :standard)
     (:name "FAMILLY")
     (:value "ttl")
     (:reactive nil))
    (:input (:type :standard) (:name "K") (:value 6) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HOWMANY")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 5 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 7 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 2 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 12 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 1))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 30 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 30 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 30 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 26 :in 1))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 27 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 26 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 27 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 23 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 26 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 8 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 29 :in 2))
   (:attributes (:color nil :style nil :modif nil)))))